% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ncde.R
\name{ncde}
\alias{ncde}
\title{Neighborhood based crowding Differential Evolution (NCDE)  for multimodal optimization}
\usage{
ncde(fn, lower, upper, control = list(), ...)
}
\arguments{
\item{fn}{objective function that should be maximized. Should not return \code{NaN}.}

\item{lower}{lower bound.}

\item{upper}{upper bound.}

\item{control}{control parameters for the algorithm. See "Details".}

\item{...}{extra arguments are passed to \code{fn}.}
}
\value{
a list contains:
\describe{
  \item{\code{pop}}{a matrix; position of the population.}
  \item{\code{popval}}{a vector; corresponding population values.}
  \item{\code{nfeval}}{number of function evaluations.}
  \item{\code{maxima}}{position of particles after using \code{L-BFGS-B} when \code{control$hybrid = TRUE}. It should be local maxima. If \code{control$hybrid == FALSE}, then it is \code{NA}.}
  \item{\code{maximaval}}{fitness values of \code{maxima}.}
}


The concept of
niching is inspired by the way organisms evolve in nature.
When integrated with EAs, niching involves the formation
of subpopulations within a population. Each subpopulation
aims to locate one optimal solution and together the whole
population is expected to locate multiple optimal solutions in a single run (Qu et al., 2012).\cr
}
\description{
A niching differential evolution (DE) algorithm with neighborhood mutation strategy to solve multimodal optimization problems.
}
\details{


The \code{control} argument is a list that can supply any of the following components:
\describe{
  \item{\code{iter}}{number of iterations. Defaults to \code{200}.}
  \item{\code{SF}}{F is a scale factor in \eqn{[0, 2]} used for scaling the differential vector. Defaults to \code{0.9}.}
  \item{\code{CR}}{crossover probability from \eqn{[0, 1]}. Defaults to \code{0.2}.}
  \item{\code{NP}}{Population size. Defaults to \code{10 * length(lower)}.}
  \item{\code{seed}}{random seed.}
  \item{\code{hybrid}}{logical; if true, before quiting the algorithm,  an \code{L-BFGS-B}
   search with the provided position as initial guess is done to improve the accuracy of the results.
     Defaults to \code{TRUE}. Note that no attempt is done to control the maximal number of
      function evaluations within the local search step (this can be done separately through \code{hybrid.control})
      }
   \item{\code{hybrid_control}}{List with any additional control parameters to pass on to \code{\link{stats}{optim}}
    when using \code{L-BFGS-B} for the local search. Defaults to \code{NULL}.}
}

The DE strategy is 'DE/rand/1'.\cr
}
\note{
The function is maximized.\cr


Check whether \code{fn} does not return any \code{NaN}.\cr

The only stopping rule is the number of iterations.\cr

The implemented algorithm here slightly differs from the original
 MATLAB code in a way that the off-springs for all \code{NP} members calculated by vectorization (\code{sapply})
  and not with \code{for} loop as the original MATLAB code.
}
\references{
Qu, B. Y., Suganthan, P. N., & Liang, J. J. (2012). Differential evolution with neighborhood mutation for multimodal optimization. IEEE transactions on evolutionary computation, 16(5), 601-614.\cr
 Based on a MATLAB code that can be found in Suganthan's home page.
}

